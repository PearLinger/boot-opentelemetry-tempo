version: "3.8"

services:

  # 添加Nacos服务
  nacos:
    image: nacos/nacos-server:v2.3.2
    environment:
      - MODE=standalone
      - NACOS_AUTH_ENABLE=true
      - NACOS_AUTH_USERNAME=nacos
      - NACOS_AUTH_PASSWORD=ElvNU6S$
      # 之前配置的密钥（保持不变）
      - NACOS_AUTH_TOKEN=SecretKey012345678901234567890123456789012345678901234567890123456789
      - NACOS_AUTH_TOKEN_SECRET_KEY=YjE4ZGYzMzEzY2Q1Njc4OTBhYjFjMmQzZTU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo=
      # 新增：服务端身份标识（自定义密钥对，建议长度≥32字节）
      - NACOS_CORE_AUTH_SERVER_IDENTITY_KEY=serverIdentityKey
      - NACOS_CORE_AUTH_SERVER_IDENTITY_VALUE=serverIdentityValue12345678901234567890123456789
      - JVM_XMS=512m
      - JVM_XMX=512m
    ports:
      - "8848:8848"
      - "9848:9848"
    volumes:
      - ./data/nacos/data:/home/nacos/data
      - ./data/nacos/logs:/home/nacos/logs

  loki:
    image: grafana/loki:2.9.2 # 升级到较新版本以兼容
    command: -config.file=/etc/loki/loki-local.yaml
    user: "0"
    ports:
      - "3101:3100"
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:4318/v1/traces  # Tempo 2.x 使用 OpenTelemetry 协议端口
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./etc/loki-local.yaml:/etc/loki/loki-local.yaml
      - ./data/loki-data:/tmp/loki

  provider1-db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=provider1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespassword
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - ./boot-otel-tempo-provider1/db/data:/var/lib/postgresql
      - ./boot-otel-tempo-provider1/db/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 7070:80
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - provider1-db

  tempo:
    image: grafana/tempo:2.8.0  # 升级到 2.8.0 版本
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./etc/tempo-local.yaml:/etc/tempo.yaml  # 需要更新配置文件内容以适配 2.x 版本
      - ./data/tempo-data:/var/tempo  # 2.x 版本默认存储路径变化
    restart: unless-stopped
    ports:
      - "4317:4317"   # OpenTelemetry gRPC
      - "4318:4318"   # OpenTelemetry HTTP
      - "3102:3100"   # Tempo HTTP 端点
      - "9095:9095"   # Tempo 指标端口

  boot-otel-tempo-mq-consumer:
    image: "mnadeem/boot-otel-tempo-mq-consumer:0.0.1-SNAPSHOT"
    command: 'sh /app/bin/wait-for.sh rabbitmq:5672 -t 50 -- sh /app/bin/start-app.sh'
    ports:
      - "8091:8091"
    environment:
      RMQ_USER: ${RABBITMQ_DEFAULT_USER:-admin}
      RMQ_PASS: ${RABBITMQ_DEFAULT_PASS:-admin}
      REDIS_CLUSTER_NODES: ${REDIS_CLUSTER_NODES:-redis:6379}
      REDIS_CLUSTER_MAX_REDIRECTS: ${REDIS_CLUSTER_MAX_REDIRECTS:-3}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
    volumes:
      - ./data/logs:/app/logs
    depends_on:
      - rabbitmq
      - redis
      - nacos

  boot-otel-tempo-provider1:
    image: "mnadeem/boot-otel-tempo-provider1:0.0.1-SNAPSHOT"
    ports:
      - "8090:8090"
    environment:
      PROVIDER1_DB_URL: jdbc:postgresql://provider1-db:5432/provider1
      PROVIDER1_DB_USER: postgres
      PROVIDER1_DB_PASS: postgrespassword
    volumes:
      - ./data/logs:/app/logs
    depends_on:
      - tempo
      - provider1-db
      - nacos

  boot-otel-tempo-api:
    image: "mnadeem/boot-otel-tempo-api:0.0.1-SNAPSHOT"
    ports:
      - "8080:8080"
    environment:
      PROVIDER1_URL_BASE: "http://boot-otel-tempo-provider1:8090"
      RMQ_USER: ${RABBITMQ_DEFAULT_USER:-admin}
      RMQ_PASS: ${RABBITMQ_DEFAULT_PASS:-admin}
    volumes:
      - ./data/logs:/app/logs
    depends_on:
      - boot-otel-tempo-provider1
      - nacos

  promtail:
    image: grafana/promtail:2.9.0  # 升级到较新版本
    command: -config.file=/etc/promtail/promtail-local.yaml
    volumes:
      - ./etc/promtail-local.yaml:/etc/promtail/promtail-local.yaml
      - ./data/logs:/app/logs
    depends_on:
      - boot-otel-tempo-api
      - loki

  volume_exporter:
    image: mnadeem/volume_exporter
    command: ["--volume-dir=tempo:/var/tempo", "--volume-dir=logs:/app/logs", "--volume-dir=loki:/tmp/loki"]
    volumes:
      - ./data/logs:/app/logs
      - ./data/tempo-data:/var/tempo  # 匹配 Tempo 2.x 的存储路径
      - ./data/loki-data:/tmp/loki
    ports:
      - 9889:9888

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./etc/prometheus.yaml:/etc/prometheus.yaml
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus.yaml
    ports:
      - "9090:9090"
    depends_on:
      - boot-otel-tempo-api
      - volume_exporter

  grafana:
    image: grafana/grafana:12.0.0  # 升级到较新版本以支持 Tempo 2.x
    volumes:
      - ./data/grafana-data/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana-data/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./data/grafana-data/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki

  rabbitmq:
    image: rabbitmq:3.7.28-management
    #container_name: rabbitmq
    volumes:
      - ./etc/rabbitmq/:/etc/rabbitmq/
      - ./data/rabbitmq/data/:/var/lib/rabbitmq/
      - ./data/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE:-secret_cookie}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-admin}
    ports:
      - 5672:5672    #amqp
      - 15672:15672  #http
      - 15692:15692  #prometheus

  redis:
    image: "redis:alpine"
    #command: redis-server --requirepass sOmE_sEcUrE_pAsS
    #hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis-data:/var/lib/redis
      - ./etc/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=maste