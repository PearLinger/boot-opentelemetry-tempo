<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.opentelemetry.example</groupId>
	<artifactId>boot-opentelemetry-tempo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	
	<name>boot-opentelemetry-tempo</name>
	<description>Project demonstrating OpenTelemetry Instrumentation</description>
	<packaging>pom</packaging>

	<properties>
		<revision>0.1-SNAPSHOT</revision>
		<java.version>21</java.version>
		<opentelemetry.version>0.17.1</opentelemetry.version>
		<opentelemetry-agent.version>2.20.0</opentelemetry-agent.version>
		<docker-maven-plugin.version>0.34.1</docker-maven-plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
<!--			<dependency>-->
<!--				<groupId>io.opentelemetry</groupId>-->
<!--				<artifactId>opentelemetry-bom</artifactId>-->
<!--				<version>${opentelemetry.version}</version>-->
<!--				<type>pom</type>-->
<!--				<scope>import</scope>-->
<!--			</dependency>-->
			<dependency>
				<groupId>com.elegoo.cloud</groupId>
				<artifactId>elegoo-dependencies</artifactId>
				<version>${revision}</version>
				<type>pom</type> <!-- 必须声明为POM类型 -->
				<scope>import</scope> <!-- 必须使用import作用域 -->
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<!-- 使用1.18.22及以上版本，支持Java 17 -->
			<version>1.18.34</version>
			<optional>true</optional>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- Lombok 插件配置 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version>
				<configuration>
					<!-- 移除release参数，仅保留source和target -->
					<source>21</source>
					<target>21</target>
					<encoding>UTF-8</encoding>
					<!-- 可选：指定JDK工具链 -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

<!--			<plugin>-->
<!--				<groupId>io.fabric8</groupId>-->
<!--				<artifactId>docker-maven-plugin</artifactId>-->
<!--				<version>${docker-maven-plugin.version}</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>start</id>-->
<!--						<phase>pre-integration-test</phase>-->
<!--						<goals>-->
<!--							<goal>build</goal>-->
<!--							<goal>start</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--					<execution>-->
<!--						<id>stop</id>-->
<!--						<phase>post-integration-test</phase>-->
<!--						<goals>-->
<!--							<goal>stop</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>				-->
<!--			</plugin>-->
		</plugins>
	</build>
	
	<modules>
		<module>boot-otel-tempo-docker</module>
		<module>boot-otel-tempo-api</module>
		<module>boot-otel-tempo-provider1</module>
		<module>boot-otel-tempo-mq-consumer</module>
		<module>boot-otel-tempo-feign-client</module>
	</modules>

</project>