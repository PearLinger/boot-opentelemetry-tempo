server:
  port: 8080

spring:
  profiles:
    active: dev
  application:
    name: boot-otel-tempo-api
  rabbitmq:
    host: 192.168.3.217
    port: 5672
    username: admin
    password: admin
  config:
    import:
      - optional:classpath:application-${spring.profiles.active}.yaml # 加载【本地】配置
      - optional:nacos:${spring.application.name}-${spring.profiles.active}.yaml # 加载【Nacos】的配置
elegoo:
  env:
    tag: dev

app:
  flights:
    context: flights
  provider1:
    base: http://192.168.3.217:8090
    url: ${app.provider1.base}/${app.flights.context}

rabbitmq:
  flight:
    dg:
      exchange: otel_flight_direct
    received:
      routingkey: flight.event.received

# JMX 配置
management:
  endpoints:
    web:
      exposure:
        include: prometheus,health,info,metric  # 覆盖默认的"*"，保留需要的端点
  health:
    probes:
      enabled: true
    show-details: always

# 日志配置
logging:
  level:
    web: INFO
    io.opentelemetry: DEBUG
    root: INFO
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr([${spring.application.name},%X{trace_id},%X{span_id}]) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m %n%wEx"
    file: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr([${spring.application.name},%X{trace_id},%X{span_id}]) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m %n%wEx"
  file:
    name: /app/logs/${spring.application.name}.log
    max-size: 10MB
    max-history: 1
    clean-history-on-start: true